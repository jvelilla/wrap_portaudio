note

	description: "This file has been generated by WrapC. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class PA_HOST_ERROR_INFO_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	hostapitype: INTEGER
			-- Access member `hostApiType`
		require
			exists: exists
		do
			Result := c_hostapitype (item)
		ensure
			result_correct: Result = c_hostapitype (item)
		end

	set_hostapitype (a_value: INTEGER) 
			-- Change the value of member `hostApiType` to `a_value`.
		require
			exists: exists
		do
			set_c_hostapitype (item, a_value)
		ensure
			hostapitype_set: a_value = hostapitype
		end

	errorcode: INTEGER_64
			-- Access member `errorCode`
		require
			exists: exists
		do
			Result := c_errorcode (item)
		ensure
			result_correct: Result = c_errorcode (item)
		end

	set_errorcode (a_value: INTEGER_64) 
			-- Change the value of member `errorCode` to `a_value`.
		require
			exists: exists
		do
			set_c_errorcode (item, a_value)
		ensure
			errorcode_set: a_value = errorcode
		end

	errortext:  detachable C_STRING
			-- Access member `errorText`
		require
			exists: exists
		do
			if attached c_errortext (item) as l_ptr then
				create Result.make_by_pointer (l_ptr)
			end
		ensure
			result_void: Result = Void implies c_errortext (item) = default_pointer
			result_not_void: attached Result as l_result implies l_result.string.same_string ((create {C_STRING}.make_by_pointer (item)).string)
		end

	set_errortext (a_value: C_STRING) 
			-- Change the value of member `errorText` to `a_value`.
		require
			exists: exists
		do
			set_c_errortext (item, a_value.item )
		end

feature {NONE} -- Implementation wrapper for struct struct PaHostErrorInfo

	sizeof_external: INTEGER 
		external
			"C inline use <portaudio.h>"
		alias
			"sizeof(struct PaHostErrorInfo)"
		end

	c_hostapitype (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <portaudio.h>"
		alias
			"[
				((struct PaHostErrorInfo*)$an_item)->hostApiType
			]"
		end

	set_c_hostapitype (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <portaudio.h>"
		alias
			"[
				((struct PaHostErrorInfo*)$an_item)->hostApiType =  (PaHostApiTypeId)$a_value
			]"
		ensure
			hostapitype_set: a_value = c_hostapitype (an_item)
		end

	c_errorcode (an_item: POINTER): INTEGER_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <portaudio.h>"
		alias
			"[
				((struct PaHostErrorInfo*)$an_item)->errorCode
			]"
		end

	set_c_errorcode (an_item: POINTER; a_value: INTEGER_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <portaudio.h>"
		alias
			"[
				((struct PaHostErrorInfo*)$an_item)->errorCode =  (long)$a_value
			]"
		ensure
			errorcode_set: a_value = c_errorcode (an_item)
		end

	c_errortext (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <portaudio.h>"
		alias
			"[
				((struct PaHostErrorInfo*)$an_item)->errorText
			]"
		end

	set_c_errortext (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <portaudio.h>"
		alias
			"[
				((struct PaHostErrorInfo*)$an_item)->errorText =  (char const*)$a_value
			]"
		ensure
			errortext_set: a_value = c_errortext (an_item)
		end

end
